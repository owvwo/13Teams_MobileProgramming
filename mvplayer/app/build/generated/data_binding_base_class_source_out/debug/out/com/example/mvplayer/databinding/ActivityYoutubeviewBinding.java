// Generated by view binder compiler. Do not edit!
package com.example.mvplayer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.example.mvplayer.R;
import com.google.android.youtube.player.YouTubePlayerView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityYoutubeviewBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView dislikeImg;

  @NonNull
  public final TextView dislikeTextView;

  @NonNull
  public final ImageView likeImg;

  @NonNull
  public final TextView likeTextView;

  @NonNull
  public final ImageView lineBox;

  @NonNull
  public final ImageView lineBox2;

  @NonNull
  public final TextView otherInfo;

  @NonNull
  public final ImageButton playlistImg;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final TextView relatedVideoTextView;

  @NonNull
  public final ImageButton shareImg;

  @NonNull
  public final TextView videoSubtitle;

  @NonNull
  public final TextView videoSubtitle2;

  @NonNull
  public final TextView videoTitle;

  @NonNull
  public final YouTubePlayerView youtubeView;

  private ActivityYoutubeviewBinding(@NonNull LinearLayout rootView, @NonNull ImageView dislikeImg,
      @NonNull TextView dislikeTextView, @NonNull ImageView likeImg, @NonNull TextView likeTextView,
      @NonNull ImageView lineBox, @NonNull ImageView lineBox2, @NonNull TextView otherInfo,
      @NonNull ImageButton playlistImg, @NonNull RecyclerView recyclerView,
      @NonNull TextView relatedVideoTextView, @NonNull ImageButton shareImg,
      @NonNull TextView videoSubtitle, @NonNull TextView videoSubtitle2,
      @NonNull TextView videoTitle, @NonNull YouTubePlayerView youtubeView) {
    this.rootView = rootView;
    this.dislikeImg = dislikeImg;
    this.dislikeTextView = dislikeTextView;
    this.likeImg = likeImg;
    this.likeTextView = likeTextView;
    this.lineBox = lineBox;
    this.lineBox2 = lineBox2;
    this.otherInfo = otherInfo;
    this.playlistImg = playlistImg;
    this.recyclerView = recyclerView;
    this.relatedVideoTextView = relatedVideoTextView;
    this.shareImg = shareImg;
    this.videoSubtitle = videoSubtitle;
    this.videoSubtitle2 = videoSubtitle2;
    this.videoTitle = videoTitle;
    this.youtubeView = youtubeView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityYoutubeviewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityYoutubeviewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_youtubeview, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityYoutubeviewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dislikeImg;
      ImageView dislikeImg = rootView.findViewById(id);
      if (dislikeImg == null) {
        break missingId;
      }

      id = R.id.dislikeTextView;
      TextView dislikeTextView = rootView.findViewById(id);
      if (dislikeTextView == null) {
        break missingId;
      }

      id = R.id.likeImg;
      ImageView likeImg = rootView.findViewById(id);
      if (likeImg == null) {
        break missingId;
      }

      id = R.id.likeTextView;
      TextView likeTextView = rootView.findViewById(id);
      if (likeTextView == null) {
        break missingId;
      }

      id = R.id.lineBox;
      ImageView lineBox = rootView.findViewById(id);
      if (lineBox == null) {
        break missingId;
      }

      id = R.id.lineBox2;
      ImageView lineBox2 = rootView.findViewById(id);
      if (lineBox2 == null) {
        break missingId;
      }

      id = R.id.otherInfo;
      TextView otherInfo = rootView.findViewById(id);
      if (otherInfo == null) {
        break missingId;
      }

      id = R.id.playlistImg;
      ImageButton playlistImg = rootView.findViewById(id);
      if (playlistImg == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = rootView.findViewById(id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.relatedVideoTextView;
      TextView relatedVideoTextView = rootView.findViewById(id);
      if (relatedVideoTextView == null) {
        break missingId;
      }

      id = R.id.shareImg;
      ImageButton shareImg = rootView.findViewById(id);
      if (shareImg == null) {
        break missingId;
      }

      id = R.id.videoSubtitle;
      TextView videoSubtitle = rootView.findViewById(id);
      if (videoSubtitle == null) {
        break missingId;
      }

      id = R.id.videoSubtitle2;
      TextView videoSubtitle2 = rootView.findViewById(id);
      if (videoSubtitle2 == null) {
        break missingId;
      }

      id = R.id.videoTitle;
      TextView videoTitle = rootView.findViewById(id);
      if (videoTitle == null) {
        break missingId;
      }

      id = R.id.youtubeView;
      YouTubePlayerView youtubeView = rootView.findViewById(id);
      if (youtubeView == null) {
        break missingId;
      }

      return new ActivityYoutubeviewBinding((LinearLayout) rootView, dislikeImg, dislikeTextView,
          likeImg, likeTextView, lineBox, lineBox2, otherInfo, playlistImg, recyclerView,
          relatedVideoTextView, shareImg, videoSubtitle, videoSubtitle2, videoTitle, youtubeView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
