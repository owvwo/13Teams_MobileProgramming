// Generated by view binder compiler. Do not edit!
package com.example.mvplayer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.mvplayer.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSearchBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final ImageView playlistimg;

  @NonNull
  public final Button searchbutton;

  @NonNull
  public final EditText serachword;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final ImageView thumnailImage;

  @NonNull
  public final TextView titleView;

  private FragmentSearchBinding(@NonNull FrameLayout rootView, @NonNull ImageView playlistimg,
      @NonNull Button searchbutton, @NonNull EditText serachword, @NonNull TextView textView3,
      @NonNull ImageView thumnailImage, @NonNull TextView titleView) {
    this.rootView = rootView;
    this.playlistimg = playlistimg;
    this.searchbutton = searchbutton;
    this.serachword = serachword;
    this.textView3 = textView3;
    this.thumnailImage = thumnailImage;
    this.titleView = titleView;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.playlistimg;
      ImageView playlistimg = rootView.findViewById(id);
      if (playlistimg == null) {
        break missingId;
      }

      id = R.id.searchbutton;
      Button searchbutton = rootView.findViewById(id);
      if (searchbutton == null) {
        break missingId;
      }

      id = R.id.serachword;
      EditText serachword = rootView.findViewById(id);
      if (serachword == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = rootView.findViewById(id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.thumnail_image;
      ImageView thumnailImage = rootView.findViewById(id);
      if (thumnailImage == null) {
        break missingId;
      }

      id = R.id.titleView;
      TextView titleView = rootView.findViewById(id);
      if (titleView == null) {
        break missingId;
      }

      return new FragmentSearchBinding((FrameLayout) rootView, playlistimg, searchbutton,
          serachword, textView3, thumnailImage, titleView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
